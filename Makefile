CXX = g++
EMCC = em++
CXXFLAGS = -std=c++20 -Wall -Wextra -O2
EMCCFLAGS = -std=c++20 -Wall -Wextra -O2 -s NO_EXIT_RUNTIME=1 -s ALLOW_MEMORY_GROWTH=1 -s MODULARIZE -s SINGLE_FILE=1 -s NO_DISABLE_EXCEPTION_CATCHING -s EXPORT_ES6=1 -lembind
SRC_DIR = src
BUILD_DIR_CLI = build
BUILD_DIR_SINGLE_THREAD = tsp_single_thread
BUILD_DIR_WORKER_DOM = tsp_worker_DOM
BUILD_DIR_REACT_APP = ../rtsp_worker_react/src/wasm
TARGET_CLI = $(BUILD_DIR_CLI)/tsp
TARGET_SINGLE_THREAD = $(BUILD_DIR_SINGLE_THREAD)/tsp.js
TARGET_WORKER_DOM = $(BUILD_DIR_WORKER_DOM)/tsp.js
TARGET_REACT_APP = $(BUILD_DIR_REACT_APP)/tsp.js

SRC_CLI = $(SRC_DIR)/tsp_cli.cpp
SRC = $(SRC_DIR)/tsp.cpp

all: $(TARGET_CLI) $(TARGET_SINGLE_THREAD) $(TARGET_WORKER_DOM) $(TARGET_REACT_APP)

$(TARGET_CLI): $(SRC_CLI)
	@mkdir -p $(BUILD_DIR_CLI)
	$(CXX) $(CXXFLAGS) $(SRC_CLI) -o $(TARGET_CLI)

$(TARGET_SINGLE_THREAD): $(SRC)
	@mkdir -p $(BUILD_DIR_SINGLE_THREAD)
	$(EMCC) $(EMCCFLAGS) -s ENVIRONMENT=web $(SRC) -o $(TARGET_SINGLE_THREAD)

$(TARGET_WORKER_DOM): $(SRC)
	@mkdir -p $(BUILD_DIR_WORKER_DOM)
	$(EMCC) $(EMCCFLAGS) -s ENVIRONMENT=worker $(SRC) -o $(TARGET_WORKER_DOM)

$(TARGET_REACT_APP): $(SRC)
	@mkdir -p $(BUILD_DIR_REACT_APP)
	$(EMCC) $(EMCCFLAGS) -s ENVIRONMENT=worker $(SRC) -o $(TARGET_REACT_APP)

clean:
	rm -rf $(BUILD_DIR_CLI) $(BUILD_DIR_SINGLE_THREAD) $(BUILD_DIR_WORKER_DOM) $(BUILD_DIR_REACT_APP)

.PHONY: all clean
